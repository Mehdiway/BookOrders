version: '3.9'

services:
  catalog-api:
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    container_name: catalog-service
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=CatalogDb;User=sa;Password=BookManagement123;TrustServerCertificate=True;
    networks:
      - app-network

  order-api:
    build:
      context: .
      dockerfile: Services/Order/Order.API/Dockerfile
    container_name: order-service
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=OrderDb;User=sa;Password=BookManagement123;TrustServerCertificate=True;
    networks:
      - app-network

  api-gateway:
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    container_name: api-gateway
    ports:
      - '5000:80'
    depends_on:
      - catalog-api
      - order-api
    environment:
      - ASPNETCORE_URLS=http://+:80
    networks:
      - app-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: BookManagement123
      ACCEPT_EULA: 'Y'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
